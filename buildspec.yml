version: 0.2

phases:
  install:
    runtime-versions:
      ruby: 3.0
  pre_build:
    commands:
      - ruby -v
#      - Dockerデーモンを起動するために必要な冒頭2行
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - aws_account_id=$(echo ${CODEBUILD_BUILD_ARN} | cut -f 5 -d :)
      - aws --version
      - aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin ${aws_account_id}.dkr.ecr.ap-northeast-1.amazonaws.com
      - cp back/.env.example back/.env
      - . back/deploy/set_env_variables.sh
      - bash back/deploy/set_env_variables.sh
#     - Codebuildが標準で使うことができる環境変数
      - version=$CODEBUILD_RESOLVED_SOURCE_VERSION
      - NGINX_ECR_REPO_URL=${aws_account_id}.dkr.ecr.ap-northeast-1.amazonaws.com/bosailv-backend-nginx
      - RAILS_ECR_REPO_URL=${aws_account_id}.dkr.ecr.ap-northeast-1.amazonaws.com/bosailv-backend-rails
      - FRONT_ECR_REPO_URL=${aws_account_id}.dkr.ecr.ap-northeast-1.amazonaws.com/bosailv-frontend
  build:
    commands:
      - echo Build started on `date`
      - docker build -t bosailv-backend-nginx:"${version}" -f ./back/infra/web/Dockerfile.prod ./back
      - docker tag bosailv-backend-nginx:"${version}" ${NGINX_ECR_REPO_URL}:"${version}"
      - CURRENT_NGINX_ECR_REPO_URL="${NGINX_ECR_REPO_URL}":"${version}"
      - docker build -t bosailv-backend-rails:"${version}" -f ./back/infra/app/Dockerfile.prod ./back
      - docker tag bosailv-backend-rails:"${version}" "${RAILS_ECR_REPO_URL}":"${version}"
      - CURRENT_RAILS_ECR_REPO_URL="${RAILS_ECR_REPO_URL}":"${version}"
      - docker build -t bosailv-frontend:"${version}" -f ./front/Dockerfile.prod ./front
      - docker tag bosailv-frontend:"${version}" "${FRONT_ECR_REPO_URL}":"${version}"
      - CURRENT_FRONT_ECR_REPO_URL="${FRONT_ECR_REPO_URL}":"${version}"
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $CURRENT_NGINX_ECR_REPO_URL
      - docker push $CURRENT_RAILS_ECR_REPO_URL
      - docker push $CURRENT_FRONT_ECR_REPO_URL
      - printf '[{"name":"bosailv-app-container-frontend","imageUri":"%s"}]' $CURRENT_FRONT_ECR_REPO_URL > frontend_imagedefinitions.json
      - printf '[{"name":"bosailv-app-container-nginx-backend","imageUri":"%s"}, {"name":"bosailv-app-container-rails-backend","imageUri":"%s"}]' $CURRENT_NGINX_ECR_REPO_URL $CURRENT_RAILS_ECR_REPO_URL > backend_imagedefinitions.json
      - cd back
      - bundle install
      - bundle exec rails db:migrate RAILS_ENV=production
      - bundle exec rails db:seed RAILS_ENV=production
      - cd ..
artifacts:
  files:
    - frontend_imagedefinitions.json
    - backend_imagedefinitions.json
